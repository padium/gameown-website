{"version":3,"file":"static/js/1799.f2fac961.chunk.js","mappings":"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","sources":["app/profiles/page.tsx","app/profiles/publisher/page.tsx","clients/sso.client.ts","components/auth/account-menu.tsx","components/head-menu.tsx","resources/index.ts"],"sourcesContent":["import './page.module.css'\nimport {ReactNode} from \"react\"\nimport HeadMenu from \"../../components/head-menu\"\n\nexport interface ProfileProps {\n    content: ReactNode\n}\n\nexport default function Profile(props: ProfileProps) {\n    return <div>\n        <HeadMenu/>\n        {props.content}\n    </div>\n}\n","import {useNavigate} from \"react-router\"\nimport {Grid} from \"@mui/material\"\nimport Profile from \"../page\"\n\nfunction PublisherProfilePage() {\n    const navigate = useNavigate()\n    return <Grid container>\n\n    </Grid>\n}\n\nconst page =() => <Profile content={<PublisherProfilePage/>}/>\nexport default page","import {Client, Session, TokenUser} from \"@padium/sso\"\nimport UserSession from \"../utils/storage/user-session\"\n\n// @ts-ignore\nfunction getSession(): Session {\n    return UserSession.getSession() || {jwt: null, refreshToken: null, user: null}\n}\n\nfunction setSession(jwt: string, refreshToken: string, user: TokenUser) {\n    UserSession.storeSession({jwt, refreshToken, user})\n}\n\nconst ssoClient = new Client(process.env.REACT_APP_ENV === \"production\", undefined, getSession, setSession)\n\nexport default ssoClient","import {Avatar, Box, IconButton, Menu, MenuItem, Typography} from \"@mui/material\"\nimport {useState} from \"react\"\nimport {useNavigate} from \"react-router\"\nimport Path from \"../../routes/path.enum\"\nimport {deepPurple} from \"@mui/material/colors\"\nimport ssoClient from \"../../clients/sso.client\"\n\nexport default function AccountMenu() {\n    const [anchor, setAnchor] = useState<HTMLButtonElement | null>(null)\n    const navigate = useNavigate()\n\n    const logout = async () => {\n        await ssoClient.auth.logout()\n        navigate(Path.HOME)\n    }\n\n    return <Box>\n        <IconButton onClick={(event) => setAnchor(event.currentTarget)} sx={{p: 0}}>\n            <Avatar sx={{bgcolor: deepPurple[500]}}>OP</Avatar>\n        </IconButton>\n        <Menu\n            sx={{mt: '45px'}}\n            id=\"menu-appbar\"\n            anchorEl={anchor}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={anchor != null}\n            onClose={() => setAnchor(null)}\n        >\n            <MenuItem onClick={() => navigate(Path.DASHBOARD_PROFILE)}>\n                <Typography textAlign=\"left\">Profile</Typography>\n            </MenuItem>\n            <MenuItem onClick={() => navigate(Path.DASHBOARD_WALLET)}>\n                <Typography textAlign=\"left\">Wallet</Typography>\n            </MenuItem>\n            <MenuItem onClick={() => navigate(Path.DASHBOARD_PUBLISHER)}>\n                <Typography textAlign=\"left\">Publisher</Typography>\n            </MenuItem>\n            <MenuItem onClick={logout}>\n                <Typography textAlign=\"left\">Logout</Typography>\n            </MenuItem>\n        </Menu>\n    </Box>\n}","import {Box, Button, Container, Grid, Popover, Stack} from \"@mui/material\"\nimport Path from \"../routes/path.enum\"\nimport React, {useState} from \"react\"\nimport {useNavigate} from \"react-router\"\nimport UserSession from \"../utils/storage/user-session\"\nimport {Logo} from \"../resources\"\nimport AccountMenu from \"./auth/account-menu\"\n\nexport default function HeadMenu() {\n    const navigate = useNavigate()\n    const [marketAnchor, setMarketAnchor] = useState<HTMLButtonElement | null>(null)\n\n    const displayLogin = <Stack direction=\"row\" spacing={1} justifyContent=\"end\">\n        <Button variant=\"outlined\" onClick={() => navigate(Path.LOGIN)}>Login</Button>\n        <Button variant=\"contained\" onClick={() => navigate(Path.REGISTER)}>Register</Button>\n    </Stack>\n\n    const displayAccount = <Stack direction=\"row\" spacing={1} justifyContent=\"end\">\n        <AccountMenu/>\n    </Stack>\n\n    return (\n        <Box sx={{marginTop: 1, borderBottom: \"0.1rem solid #DCDEDD\", paddingBottom: 1}}>\n            <Container>\n                <Grid container>\n                    <Grid item xs>\n                        <Button variant=\"text\" onClick={() => navigate(Path.HOME)}>\n                            <img className=\"w-8 h-auto mr-1\" src={Logo} alt=\"logo\"/>\n                            <span className=\"text-xl\">Padium</span>\n                        </Button>\n                    </Grid>\n                    <Grid item xs>\n                        <Button variant=\"text\" onClick={() => navigate(Path.STORE)}>\n                            <span className=\"text-lg text-black\">Store</span>\n                        </Button>\n                        <Button aria-describedby=\"market\" variant=\"text\" onClick={(event) => setMarketAnchor(event.currentTarget)}>\n                            <span className=\"text-lg text-black\">Market</span>\n                        </Button>\n                        <Popover\n                            id=\"market\"\n                            open={marketAnchor != null}\n                            anchorEl={marketAnchor}\n                            onClose={() => setMarketAnchor(null)}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                        >\n                            <Stack>\n                                <Button aria-describedby=\"market\" variant=\"text\" onClick={() => navigate(Path.MARKETPLACE)}>\n                                    <span className=\"text-lg text-black\">Second hand marketplace</span>\n                                </Button>\n                                <Button aria-describedby=\"market\" variant=\"text\"\n                                        onClick={() => window.open(\"https://market.immutable.com/\", \"_blank\")}>\n                                    <span className=\"text-lg text-black\">Decentralized marketplace on ImmutableX</span>\n                                </Button>\n                            </Stack>\n                        </Popover>\n                        <Button variant=\"text\" onClick={() => navigate(Path.INVENTORY)}>\n                            <span className=\"text-lg text-black\">Inventory</span>\n                        </Button>\n                        <Button variant=\"text\" onClick={() => navigate(Path.COMMUNITY)}>\n                            <span className=\"text-lg text-black\">Community</span>\n                        </Button>\n                    </Grid>\n                    <Grid item xs>\n                        {UserSession.hasSession() ? displayAccount : displayLogin}\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    )\n}\n","import Logo from \"./logo.png\"\nimport Google from \"./icons/google_ico.png\"\n\nexport const Ico = {\n    Google\n}\n\nexport { Logo }"],"names":["Profile","props","_jsxs","children","_jsx","HeadMenu","content","PublisherProfilePage","useNavigate","Grid","container","ssoClient","Client","process","undefined","UserSession","jwt","refreshToken","user","AccountMenu","_useState","useState","_useState2","_slicedToArray","anchor","setAnchor","navigate","logout","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Path","stop","apply","arguments","Box","IconButton","onClick","event","currentTarget","sx","p","Avatar","bgcolor","deepPurple","Menu","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Typography","textAlign","marketAnchor","setMarketAnchor","displayLogin","Stack","direction","spacing","justifyContent","Button","variant","displayAccount","marginTop","borderBottom","paddingBottom","Container","item","xs","className","src","Logo","alt","Popover","window","Ico","Google"],"sourceRoot":""}