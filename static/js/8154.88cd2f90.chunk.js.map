{"version":3,"file":"static/js/8154.88cd2f90.chunk.js","mappings":"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","sources":["components/dashboard/head-menu.tsx","components/dashboard/nav-menu-item.tsx","components/dashboard/nav-menu.tsx","app/dashboard/menu-items.tsx","app/dashboard/page.tsx","app/dashboard/publisher/game/new-game.page.tsx","clients/padium.client.ts","clients/sso.client.ts","components/dashboard/loading.tsx","resources/index.ts","utils/auth/auth-refresh.ts"],"sourcesContent":["import * as React from 'react';\nimport {alpha, styled} from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport Badge from '@mui/material/Badge';\nimport SearchIcon from '@mui/icons-material/Search';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport {Button} from \"@mui/material\"\nimport Path from \"../../routes/path.enum\"\nimport {Logo} from \"../../resources\"\nimport {useNavigate} from \"react-router\"\n\nconst Search = styled('div')(({theme}) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({theme}) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}));\n\n// <Box>\n//     <Search sx={{border: '1px solid black'}}>\n//         <SearchIconWrapper>\n//             <SearchIcon/>\n//         </SearchIconWrapper>\n//         <StyledInputBase\n//             placeholder=\"Search…\"\n//             inputProps={{'aria-label': 'search'}}\n//         />\n//     </Search>\n// </Box>\nexport default function HeadMenu() {\n    const navigate = useNavigate()\n\n    return (\n        <Box sx={{flexGrow: 1}}>\n            <Toolbar>\n                <Box sx={{width: '228px'}}>\n                    <Button variant=\"text\" onClick={() => navigate(Path.HOME)}>\n                        <img className=\"w-8 h-auto mr-1\" src={Logo} alt=\"logo\"/>\n                        <span className=\"text-xl\">Padium</span>\n                    </Button>\n                </Box>\n                <Box sx={{flexGrow: \"1\"}}/>\n                <Box>\n                    <IconButton\n                        size=\"large\"\n                        aria-label=\"show new notifications\"\n                        color=\"inherit\"\n                    >\n                        <Badge badgeContent={0} color=\"error\">\n                            <NotificationsIcon/>\n                        </Badge>\n                    </IconButton>\n                </Box>\n            </Toolbar>\n        </Box>\n    )\n}","import {Collapse, List, ListItemButton, ListItemIcon, ListItemText, Paper} from \"@mui/material\"\nimport {ReactElement, useState} from \"react\"\nimport {isNotNull} from \"@d-lab/common-kit\";\nimport {useNavigate} from \"react-router\"\nimport {ExpandLess, ExpandMore} from \"@mui/icons-material\"\nimport {MenuItem} from \"./nav-menu\"\n\nexport interface NavMenuItemProps {\n    items: MenuItem[]\n}\n\nexport default function NavMenuItem(props: NavMenuItemProps) {\n    const [open, setOpen] = useState<{ [key: string]: boolean }>({});\n    const navigate = useNavigate()\n\n    const onClick = (item: MenuItem) => {\n        if (item.children.length > 0) {\n            setOpen({...open, [item.id]: !open[item.id]})\n        } else if (isNotNull(item.target)) {\n            navigate(item.target!)\n        }\n    }\n\n    return <List component=\"nav\">\n            {\n                props.items.map(item => {\n                    return <div key={item.id}>\n                        <ListItemButton onClick={() => onClick(item)}>\n                            {isNotNull(item.icon) ? <ListItemIcon>{item.icon}</ListItemIcon> : null}\n                            <ListItemText primary={item.title}/>\n                            {item.children.length > 0 ? (open[item.id] ? <ExpandLess/> : <ExpandMore/>) : null}\n                        </ListItemButton>\n                        {item.children.length > 0 ?\n                            <Collapse in={open[item.id]} timeout=\"auto\" unmountOnExit>\n                                <List component=\"div\" disablePadding>\n                                    {item.children.map(child => {\n                                        return <ListItemButton key={child.id} sx={{pl: 4}} onClick={() => onClick(child)}>\n                                            <ListItemIcon>\n                                                {child.icon}\n                                            </ListItemIcon>\n                                            <ListItemText primary={child.title}/>\n                                        </ListItemButton>\n                                    })}\n                                </List>\n                            </Collapse> : null}\n                    </div>\n                })\n            }\n        </List>\n}","import {Divider, List, Paper, Stack, Typography} from \"@mui/material\"\nimport {ReactElement} from \"react\"\nimport {isNotNull} from \"@d-lab/common-kit\";\nimport NavMenuItem from \"./nav-menu-item\"\nimport \"./menu.css\"\n\nexport interface MenuCategory {\n    id: number,\n    icon: ReactElement | null\n    title: string | null\n    items: MenuItem[]\n}\n\nexport interface MenuItem {\n    id: number,\n    icon: ReactElement | null\n    title: string\n    target: string | null\n    children: MenuItem[]\n}\n\nexport interface NavMenuProps {\n    categories: MenuCategory[]\n}\n\nexport default function NavMenu(props: NavMenuProps) {\n\n    return <Paper elevation={0}>\n        <List component=\"nav\">\n            {\n                props.categories.map((category, index) => {\n                    return <div key={category.id}>\n                        <Stack key={category.id + \"_title\"} className=\"mt-1 ml-3\" direction=\"row\" spacing={1}>\n                            {isNotNull(category.icon) ? category.icon : null}\n                            {isNotNull(category.title) ? <Typography>{category.title}</Typography> : null}\n                        </Stack>\n                        <NavMenuItem items={category.items}/>\n                        {index < props.categories.length - 1 ? <Divider/> : null}\n                    </div>\n                })\n            }\n        </List>\n    </Paper>\n}","import {MenuCategory} from \"../../components/dashboard/nav-menu\"\nimport Path from \"../../routes/path.enum\"\nimport AccountBoxIcon from '@mui/icons-material/AccountBox'\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings'\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet'\nimport PaymentIcon from '@mui/icons-material/Payment'\nimport SportsEsportsIcon from '@mui/icons-material/SportsEsports'\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount'\nimport BusinessIcon from '@mui/icons-material/Business'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts'\nimport SmartToyIcon from '@mui/icons-material/SmartToy'\n\nexport const menu: MenuCategory[] = [\n    {\n        id: 1,\n        icon: null,\n        title: null,\n        items: [\n            {\n                id: 2,\n                icon: <AccountBoxIcon/>,\n                title: \"Public Profile\",\n                target: Path.DASHBOARD_PROFILE,\n                children: []\n            },\n            {\n                id: 3,\n                icon: <AdminPanelSettingsIcon/>,\n                title: \"Account\",\n                target: Path.DASHBOARD_ACCOUNT,\n                children: []\n            }\n        ]\n    },\n    {\n        id: 100,\n        icon: null,\n        title: \"Wallet\",\n        items: [\n            {\n                id: 101,\n                icon: <AccountBalanceWalletIcon/>,\n                title: \"Balance\",\n                target: Path.DASHBOARD_WALLET,\n                children: []\n            },\n            {\n                id: 102,\n                icon: <PaymentIcon/>,\n                title: \"Payment Method\",\n                target: Path.DASHBOARD_W_PAYMENT,\n                children: []\n            }\n        ]\n    },\n    {\n        id: 200,\n        icon: null,\n        title: \"Game Management\",\n        items: [\n            {\n                id: 201,\n                icon: <BusinessIcon/>,\n                title: \"Become a Publisher\",\n                target: Path.DASHBOARD_PUBLISHER,\n                children: []\n            }\n        ]\n    }\n]\n\nexport const menuPublisher: MenuCategory = {\n    id: 200,\n    icon: null,\n    title: \"Game Management\",\n    items: [\n        {\n            id: 201,\n            icon: <BusinessIcon/>,\n            title: \"Publisher\",\n            target: Path.DASHBOARD_PUBLISHER,\n            children: []\n        },\n        {\n            id: 202,\n            icon: <SupervisorAccountIcon/>,\n            title: \"Operators\",\n            target: Path.DASHBOARD_P_OPERATORS,\n            children: []\n        },\n        {\n            id: 203,\n            icon: <SportsEsportsIcon/>,\n            title: \"Games\",\n            target: Path.DASHBOARD_P_GAMES,\n            children: []\n        }\n    ]\n}\n\nexport const menuAdmin: MenuCategory = {\n    id: 300,\n    icon: null,\n    title: \"Admin Management\",\n    items: [\n        {\n            id: 201,\n            icon: <ManageAccountsIcon/>,\n            title: \"Users\",\n            target: Path.DASHBOARD_ADMIN_USERS,\n            children: []\n        },\n        {\n            id: 202,\n            icon: <SmartToyIcon/>,\n            title: \"Game Approval\",\n            target: Path.DASHBOARD_ADMIN_GAMES,\n            children: []\n        }\n    ]\n}\n\n\n","import './page.module.css'\nimport {Container, Grid, Paper} from \"@mui/material\"\nimport HeadMenu from \"../../components/dashboard/head-menu\"\nimport NavMenu from \"../../components/dashboard/nav-menu\"\nimport {menu, menuAdmin, menuPublisher} from \"./menu-items\"\nimport {ReactNode, useEffect, useState} from \"react\"\nimport handleAuth from \"../../utils/auth/auth-refresh\"\nimport apiClient from \"../../clients/padium.client\"\nimport ssoClient from \"../../clients/sso.client\"\nimport {isAllowed, Role} from \"@padium/sso\"\n\nexport interface DashboardProps {\n    content: ReactNode\n}\n\nexport default function Dashboard(props: DashboardProps) {\n    const [navItems, setNavItems] = useState(menu)\n\n    useEffect(() => {\n        handleAuth(() => apiClient.publisher.getOwn())\n            .then(_ => {\n                const tmp = [...menu]\n                tmp[2] = menuPublisher\n                setNavItems(tmp)\n                handleAuth(() => ssoClient.role.me())\n                    .then(response => {\n                        if (isAllowed(response.role, Role.Moderator)) {\n                            setNavItems([...tmp, menuAdmin])\n                        }\n                    })\n            })\n    }, [])\n\n    return <div>\n        <HeadMenu/>\n        <Grid container>\n            <Grid item xs={2}>\n                <NavMenu categories={navItems}/>\n            </Grid>\n            <Grid item xs={10}>\n                <Container component=\"main\">\n                    <Paper elevation={1} sx={{width: \"100%\", padding: \"20px\"}}>\n                        {props.content}\n                    </Paper>\n                </Container>\n            </Grid>\n        </Grid>\n    </div>\n}\n","import Dashboard from \"../../page\"\nimport apiClient from \"../../../../clients/padium.client\"\nimport React, {useEffect, useState} from \"react\"\nimport {useNavigate} from \"react-router\"\nimport Path from \"../../../../routes/path.enum\"\nimport {Button, CircularProgress, Grid, TextField, Typography} from \"@mui/material\"\nimport {isEmpty, isNull} from \"@d-lab/common-kit\"\nimport Loading from \"../../../../components/dashboard/loading\"\nimport handleAuth from \"../../../../utils/auth/auth-refresh\"\n\nfunction NewGamePage() {\n    const [submit, setSubmit] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [name, setName] = useState(\"\")\n    const [identifier, setIdentifier] = useState(\"\")\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        handleAuth(() => apiClient.publisher.getOwn())\n            .then(response => {\n                if (isNull(response.publisher)) {\n                    navigate(Path.DASHBOARD_PUBLISHER)\n                } else {\n                    setLoading(false)\n                }\n            })\n            .catch(error => {\n                console.error(error)\n                navigate(Path.DASHBOARD_P_GAMES)\n            })\n    }, [])\n\n    const isNotValid = (): boolean => {\n        return isEmpty(name) || isEmpty(identifier)\n    }\n    const handleSubmit = async () => {\n        setSubmit(true)\n        handleAuth(() => apiClient.game.create({\n            name,\n            identifier,\n            header: \"\",\n            description: \"\",\n            websiteUrl: null,\n            twitterUrl: null,\n            mainUrl: \"\",\n            mainVideoUrl: null,\n            thumbnailUrl: \"\",\n            bannerUrl: \"\",\n            tags: \"\",\n            price: null,\n            downloadUrl: null,\n            ingamePayment: false,\n            availableAt: null\n        })).then(game => {\n            setSubmit(false)\n            navigate(Path.DASHBOARD_P_GAME_EDIT.replace(\":id\", game.id.toString()))\n        })\n    }\n\n    if (loading) {\n        return <Loading/>\n    }\n\n    return <Grid container>\n        <Typography>Create a new Game</Typography>\n        <Grid item xs={12}>\n            <Typography>Name</Typography>\n            <TextField\n                className=\"mt-5\"\n                margin=\"normal\"\n                required\n                id=\"name\"\n                label=\"name\"\n                autoComplete=\"name\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <Typography>Identifier</Typography>\n            <TextField\n                className=\"mt-5\"\n                margin=\"normal\"\n                required\n                label=\"identifier\"\n                autoComplete=\"identifier\"\n                onChange={(e) => {\n                    if (/[a-z-]$/.test(e.target.value)) {\n                        setIdentifier(e.target.value)\n                    }\n                }}\n                value={identifier}\n            />\n        </Grid>\n        <Grid item xs={12}>\n            <Button\n                variant=\"contained\"\n                onClick={handleSubmit}\n                disabled={isNotValid() || submit}\n            >\n                Create\n                {submit && <CircularProgress color=\"inherit\"/>}\n            </Button>\n        </Grid>\n    </Grid>\n}\n\nconst page = () => <Dashboard content={<NewGamePage/>}/>\nexport default page","import {Client, Session} from \"@padium/core\"\nimport UserSession from \"../utils/storage/user-session\"\n\n// @ts-ignore\nfunction getSession(): Session {\n    return UserSession.getSession() || {jwt: null, refreshToken: null}\n}\n\nconst apiClient = new Client(process.env.REACT_APP_ENV === \"production\", getSession)\n\nexport default apiClient","import {Client, Session, TokenUser} from \"@padium/sso\"\nimport UserSession from \"../utils/storage/user-session\"\n\n// @ts-ignore\nfunction getSession(): Session {\n    return UserSession.getSession() || {jwt: null, refreshToken: null, user: null}\n}\n\nfunction setSession(jwt: string, refreshToken: string, user: TokenUser) {\n    UserSession.storeSession({jwt, refreshToken, user})\n}\n\nconst ssoClient = new Client(process.env.REACT_APP_ENV === \"production\", undefined, getSession, setSession)\n\nexport default ssoClient","import {CircularProgress, Stack} from \"@mui/material\"\n\nexport default function Loading() {\n    return <Stack alignItems=\"center\">\n        <CircularProgress />\n    </Stack>\n}","import Logo from \"./logo.png\"\nimport Google from \"./icons/google_ico.png\"\n\nexport const Ico = {\n    Google\n}\n\nexport { Logo }","import {isNotNull} from \"@d-lab/common-kit\"\nimport UserSession from \"../storage/user-session\"\nimport ssoClient from \"../../clients/sso.client\"\nimport {TokenResponse} from \"@padium/sso\"\n\nexport default async function handleAuth<T>(call: () => Promise<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n        call().then((data: T) => {\n            resolve(data)\n        }).catch((error) => {\n            if (error.code == \"601\" && isNotNull(UserSession.getSession()?.refreshToken)) {\n                ssoClient.auth.refreshToken().then((_: TokenResponse) => {\n                    call().then((data2: T) => {\n                        resolve(data2)\n                    }).catch((error2) => {\n                      reject(error2)\n                    })\n                })\n            }\n            reject(error)\n        })\n    })\n}"],"names":["styled","_ref","theme","_defineProperty","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","InputBase","_ref4","color","paddingLeft","concat","transition","transitions","create","HeadMenu","navigate","useNavigate","_jsx","Box","sx","flexGrow","children","_jsxs","Toolbar","Button","variant","onClick","Path","className","src","Logo","alt","IconButton","size","Badge","badgeContent","NotificationsIcon","NavMenuItem","props","_useState","useState","_useState2","_slicedToArray","open","setOpen","item","length","_objectSpread","id","isNotNull","target","List","component","items","map","ListItemButton","icon","ListItemIcon","ListItemText","primary","title","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","child","pl","NavMenu","Paper","elevation","categories","category","index","Stack","direction","Typography","Divider","menu","AccountBoxIcon","AdminPanelSettingsIcon","AccountBalanceWalletIcon","PaymentIcon","BusinessIcon","menuPublisher","SupervisorAccountIcon","SportsEsportsIcon","menuAdmin","ManageAccountsIcon","SmartToyIcon","Dashboard","navItems","setNavItems","useEffect","handleAuth","apiClient","then","_","tmp","_toConsumableArray","ssoClient","response","isAllowed","role","Role","Grid","container","xs","Container","content","NewGamePage","submit","setSubmit","_useState3","_useState4","loading","setLoading","_useState5","_useState6","name","setName","_useState7","_useState8","identifier","setIdentifier","isNull","publisher","catch","error","console","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","header","description","websiteUrl","twitterUrl","mainUrl","mainVideoUrl","thumbnailUrl","bannerUrl","tags","price","downloadUrl","ingamePayment","availableAt","game","toString","stop","apply","arguments","Loading","TextField","margin","required","label","autoComplete","onChange","e","value","test","disabled","isEmpty","CircularProgress","Client","process","UserSession","jwt","refreshToken","undefined","user","Ico","Google","_x","_handleAuth","call","abrupt","Promise","resolve","reject","data","_UserSession$getSessi","code","data2","error2"],"sourceRoot":""}